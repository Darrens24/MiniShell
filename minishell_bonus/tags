!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABORT_CHAR	readline/include/readline/chardefs.h	/^#define ABORT_CHAR /;"	d
ABORT_CHAR	readline/include/readline/chardefs.h	/^#undef ABORT_CHAR$/;"	d
ALPHABETIC	readline/include/readline/chardefs.h	/^#define ALPHABETIC(/;"	d
ANYOTHERKEY	readline/include/readline/keymaps.h	/^#define ANYOTHERKEY /;"	d
BLK	minishell.h	/^# define BLK /;"	d
BLU	minishell.h	/^# define BLU /;"	d
BLUE	Libft/Makefile	/^BLUE='\\033[0;34m'$/;"	m
BLUE	Makefile	/^BLUE='\\033[0;34m'$/;"	m
BUFFER_SIZE	Libft/get_next_line.h	/^#  define BUFFER_SIZE /;"	d
CC	Libft/Makefile	/^CC = gcc$/;"	m
CC	Makefile	/^CC = gcc$/;"	m
CFLAGS	Libft/Makefile	/^CFLAGS = -Wall -Wextra -Werror$/;"	m
CFLAGS	Makefile	/^CFLAGS = -Wall -Wextra -Werror #-fsanitize=address$/;"	m
COLOR_SUPPORT	readline/include/readline/rlconf.h	/^#define COLOR_SUPPORT$/;"	d
COMMAND	readline/share/readline/fileman.c	/^} COMMAND;$/;"	t	typeref:struct:__anon1	file:
CPFunction	readline/include/readline/rltypedefs.h	/^typedef char *CPFunction () __attribute__ ((deprecated));$/;"	t
CPFunction	readline/include/readline/rltypedefs.h	/^typedef char *CPFunction ();$/;"	t
CPPFunction	readline/include/readline/rltypedefs.h	/^typedef char **CPPFunction () __attribute__ ((deprecated));$/;"	t
CPPFunction	readline/include/readline/rltypedefs.h	/^typedef char **CPPFunction ();$/;"	t
CTRL	readline/include/readline/chardefs.h	/^#  undef CTRL$/;"	d
CTRL	readline/include/readline/chardefs.h	/^#define CTRL(/;"	d
CTRL_CHAR	readline/include/readline/chardefs.h	/^#define CTRL_CHAR(/;"	d
CYAN	Libft/Makefile	/^CYAN='\\033[0;36m'$/;"	m
CYAN	Makefile	/^CYAN='\\033[0;36m'$/;"	m
CYN	minishell.h	/^# define CYN /;"	d
DARKGRAY	Libft/Makefile	/^DARKGRAY='\\033[1;30m'$/;"	m
DARKGRAY	Makefile	/^DARKGRAY='\\033[1;30m'$/;"	m
DECIMAL	Libft/ft_printf.h	/^# define DECIMAL /;"	d
DEFAULT_INPUTRC	readline/include/readline/rlconf.h	/^#define DEFAULT_INPUTRC /;"	d
DISPLAY_TABS	readline/include/readline/rlconf.h	/^#define DISPLAY_TABS$/;"	d
DOT	minishell.h	/^# define DOT /;"	d
ESC	readline/include/readline/chardefs.h	/^#define ESC /;"	d
ESC	readline/include/readline/chardefs.h	/^#undef ESC$/;"	d
FALSE	minishell.h	/^# define FALSE /;"	d
FT_PRINTF_H	Libft/ft_printf.h	/^# define FT_PRINTF_H$/;"	d
FUNMAP	readline/include/readline/readline.h	/^} FUNMAP;$/;"	t	typeref:struct:_funmap
Function	readline/include/readline/rltypedefs.h	/^typedef int Function () __attribute__ ((deprecated));$/;"	t
Function	readline/include/readline/rltypedefs.h	/^typedef int Function ();$/;"	t
GET_NEXT_LINE_H	Libft/get_next_line.h	/^# define GET_NEXT_LINE_H$/;"	d
GREEN	Libft/Makefile	/^GREEN='\\033[0;32m'$/;"	m
GREEN	Makefile	/^GREEN='\\033[0;32m'$/;"	m
GRN	minishell.h	/^# define GRN /;"	d
HANDLE_SIGNALS	readline/include/readline/rlconf.h	/^#define HANDLE_SIGNALS$/;"	d
HEXALOW	Libft/ft_printf.h	/^# define HEXALOW /;"	d
HEXAUP	Libft/ft_printf.h	/^# define HEXAUP /;"	d
HEXVALUE	readline/include/readline/chardefs.h	/^#define HEXVALUE(/;"	d
HISTENT_BYTES	readline/include/readline/history.h	/^#define HISTENT_BYTES(/;"	d
HISTORY_STATE	readline/include/readline/history.h	/^} HISTORY_STATE;$/;"	t	typeref:struct:_hist_state
HIST_ENTRY	readline/include/readline/history.h	/^} HIST_ENTRY;$/;"	t	typeref:struct:_hist_entry
HS_STIFLED	readline/include/readline/history.h	/^#define HS_STIFLED	/;"	d
IN_CTYPE_DOMAIN	readline/include/readline/chardefs.h	/^#  define IN_CTYPE_DOMAIN(/;"	d
ISALNUM	readline/include/readline/chardefs.h	/^#define ISALNUM(/;"	d
ISALPHA	readline/include/readline/chardefs.h	/^#define ISALPHA(/;"	d
ISDIGIT	readline/include/readline/chardefs.h	/^#define ISDIGIT(/;"	d
ISFUNC	readline/include/readline/keymaps.h	/^#define ISFUNC /;"	d
ISKMAP	readline/include/readline/keymaps.h	/^#define ISKMAP /;"	d
ISLOWER	readline/include/readline/chardefs.h	/^#define ISLOWER(/;"	d
ISMACR	readline/include/readline/keymaps.h	/^#define ISMACR /;"	d
ISOCTAL	readline/include/readline/chardefs.h	/^#  define ISOCTAL(/;"	d
ISPRINT	readline/include/readline/chardefs.h	/^#define ISPRINT(/;"	d
ISPRINT	readline/include/readline/chardefs.h	/^#undef ISPRINT$/;"	d
ISUPPER	readline/include/readline/chardefs.h	/^#define ISUPPER(/;"	d
ISXDIGIT	readline/include/readline/chardefs.h	/^#define ISXDIGIT(/;"	d
KEYMAP_ENTRY	readline/include/readline/keymaps.h	/^} KEYMAP_ENTRY;$/;"	t	typeref:struct:_keymap_entry
KEYMAP_ENTRY_ARRAY	readline/include/readline/keymaps.h	/^typedef KEYMAP_ENTRY KEYMAP_ENTRY_ARRAY[KEYMAP_SIZE];$/;"	t
KEYMAP_SIZE	readline/include/readline/keymaps.h	/^#define KEYMAP_SIZE /;"	d
Keymap	readline/include/readline/keymaps.h	/^typedef KEYMAP_ENTRY *Keymap;$/;"	t
LIBFT_H	Libft/libft.h	/^# define LIBFT_H$/;"	d
LIGHTBLUE	Libft/Makefile	/^LIGHTBLUE='\\033[1;34m'$/;"	m
LIGHTBLUE	Makefile	/^LIGHTBLUE='\\033[1;34m'$/;"	m
LIGHTCYAN	Libft/Makefile	/^LIGHTCYAN='\\033[1;36m'$/;"	m
LIGHTCYAN	Makefile	/^LIGHTCYAN='\\033[1;36m'$/;"	m
LIGHTGRAY	Libft/Makefile	/^LIGHTGRAY='\\033[0;37m'$/;"	m
LIGHTGRAY	Makefile	/^LIGHTGRAY='\\033[0;37m'$/;"	m
LIGHTGREEN	Libft/Makefile	/^LIGHTGREEN='\\033[1;32m'$/;"	m
LIGHTGREEN	Makefile	/^LIGHTGREEN='\\033[1;32m'$/;"	m
LIGHTPURPLE	Libft/Makefile	/^LIGHTPURPLE='\\033[1;35m'$/;"	m
LIGHTPURPLE	Makefile	/^LIGHTPURPLE='\\033[1;35m'$/;"	m
LIGHTRED	Libft/Makefile	/^LIGHTRED='\\033[1;31m'$/;"	m
LIGHTRED	Makefile	/^LIGHTRED='\\033[1;31m'$/;"	m
MAG	minishell.h	/^# define MAG /;"	d
META	readline/include/readline/chardefs.h	/^#define META(/;"	d
META_CHAR	readline/include/readline/chardefs.h	/^#define META_CHAR(/;"	d
MINISHELL_H	minishell.h	/^# define MINISHELL_H$/;"	d
MULT_MATCH	readline/include/readline/readline.h	/^#define MULT_MATCH /;"	d
NAME	Libft/Makefile	/^NAME = libft.a$/;"	m
NAME	Makefile	/^NAME = minishell$/;"	m
NEWLINE	readline/include/readline/chardefs.h	/^#define NEWLINE /;"	d
NOCOLOR	Libft/Makefile	/^NOCOLOR='\\033[0m'$/;"	m
NOCOLOR	Makefile	/^NOCOLOR='\\033[0m'$/;"	m
NON_NEGATIVE	readline/include/readline/chardefs.h	/^#  define NON_NEGATIVE(/;"	d
NO_MATCH	readline/include/readline/readline.h	/^#define NO_MATCH /;"	d
OBJ	Libft/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OCTVALUE	readline/include/readline/chardefs.h	/^#define OCTVALUE(/;"	d
ORANGE	Libft/Makefile	/^ORANGE='\\033[0;33m'$/;"	m
ORANGE	Makefile	/^ORANGE='\\033[0;33m'$/;"	m
PAGE	readline/include/readline/chardefs.h	/^#define PAGE /;"	d
PAGE	readline/include/readline/chardefs.h	/^#undef PAGE$/;"	d
PARAMS	readline/include/readline/rlstdc.h	/^#    define PARAMS(/;"	d
PARAMS	readline/include/readline/tilde.h	/^#    define PARAMS(/;"	d
PREFER_STDARG	readline/include/readline/rlstdc.h	/^#  define PREFER_STDARG$/;"	d
PREFER_VARARGS	readline/include/readline/rlstdc.h	/^#    define PREFER_VARARGS$/;"	d
PREFIX_META_HACK	readline/include/readline/rlconf.h	/^#define PREFIX_META_HACK$/;"	d
PURGE_REGEXP	readline/share/readline/hist_purgecmd.c	/^#define PURGE_REGEXP	/;"	d	file:
PURPLE	Libft/Makefile	/^PURPLE='\\033[0;35m'$/;"	m
PURPLE	Makefile	/^PURPLE='\\033[0;35m'$/;"	m
READERR	readline/include/readline/readline.h	/^#define READERR	/;"	d
READLINE_CALLBACKS	readline/include/readline/rlconf.h	/^#define READLINE_CALLBACKS$/;"	d
READLINE_LIBRARY	readline/share/readline/hist_erasedups.c	/^#define READLINE_LIBRARY /;"	d	file:
READLINE_LIBRARY	readline/share/readline/hist_purgecmd.c	/^#define READLINE_LIBRARY /;"	d	file:
REAL_LIBC	readline/share/readline/rl-fgets.c	/^#define REAL_LIBC /;"	d	file:
RED	Libft/Makefile	/^RED='\\033[0;31m'$/;"	m
RED	Makefile	/^RED='\\033[0;31m'$/;"	m
RED	minishell.h	/^# define RED /;"	d
RESET	readline/share/readline/rlptytest.c	/^static enum { RESET, TCBREAK } ttystate = RESET;$/;"	e	enum:__anon2	file:
RETURN	readline/include/readline/chardefs.h	/^#define RETURN /;"	d
RL_COMMENT_BEGIN_DEFAULT	readline/include/readline/rlconf.h	/^#define RL_COMMENT_BEGIN_DEFAULT /;"	d
RL_EMACS_MODESTR_DEFAULT	readline/include/readline/rlconf.h	/^#define RL_EMACS_MODESTR_DEFAULT	/;"	d
RL_EMACS_MODESTR_DEFLEN	readline/include/readline/rlconf.h	/^#define RL_EMACS_MODESTR_DEFLEN	/;"	d
RL_ISSTATE	readline/include/readline/readline.h	/^#define RL_ISSTATE(/;"	d
RL_PROMPT_END_IGNORE	readline/include/readline/readline.h	/^#define RL_PROMPT_END_IGNORE	/;"	d
RL_PROMPT_START_IGNORE	readline/include/readline/readline.h	/^#define RL_PROMPT_START_IGNORE	/;"	d
RL_READLINE_VERSION	readline/include/readline/readline.h	/^#define RL_READLINE_VERSION	/;"	d
RL_SETSTATE	readline/include/readline/readline.h	/^#define RL_SETSTATE(/;"	d
RL_STATE_CALLBACK	readline/include/readline/readline.h	/^#define RL_STATE_CALLBACK	/;"	d
RL_STATE_CHARSEARCH	readline/include/readline/readline.h	/^#define RL_STATE_CHARSEARCH	/;"	d
RL_STATE_COMPLETING	readline/include/readline/readline.h	/^#define RL_STATE_COMPLETING	/;"	d
RL_STATE_DISPATCHING	readline/include/readline/readline.h	/^#define RL_STATE_DISPATCHING	/;"	d
RL_STATE_DONE	readline/include/readline/readline.h	/^#define RL_STATE_DONE	/;"	d
RL_STATE_INITIALIZED	readline/include/readline/readline.h	/^#define RL_STATE_INITIALIZED	/;"	d
RL_STATE_INITIALIZING	readline/include/readline/readline.h	/^#define RL_STATE_INITIALIZING	/;"	d
RL_STATE_INPUTPENDING	readline/include/readline/readline.h	/^#define RL_STATE_INPUTPENDING	/;"	d
RL_STATE_ISEARCH	readline/include/readline/readline.h	/^#define RL_STATE_ISEARCH	/;"	d
RL_STATE_MACRODEF	readline/include/readline/readline.h	/^#define RL_STATE_MACRODEF	/;"	d
RL_STATE_MACROINPUT	readline/include/readline/readline.h	/^#define RL_STATE_MACROINPUT	/;"	d
RL_STATE_METANEXT	readline/include/readline/readline.h	/^#define RL_STATE_METANEXT	/;"	d
RL_STATE_MOREINPUT	readline/include/readline/readline.h	/^#define RL_STATE_MOREINPUT	/;"	d
RL_STATE_MULTIKEY	readline/include/readline/readline.h	/^#define RL_STATE_MULTIKEY	/;"	d
RL_STATE_NONE	readline/include/readline/readline.h	/^#define RL_STATE_NONE	/;"	d
RL_STATE_NSEARCH	readline/include/readline/readline.h	/^#define RL_STATE_NSEARCH	/;"	d
RL_STATE_NUMERICARG	readline/include/readline/readline.h	/^#define RL_STATE_NUMERICARG	/;"	d
RL_STATE_OVERWRITE	readline/include/readline/readline.h	/^#define RL_STATE_OVERWRITE	/;"	d
RL_STATE_READCMD	readline/include/readline/readline.h	/^#define RL_STATE_READCMD	/;"	d
RL_STATE_REDISPLAYING	readline/include/readline/readline.h	/^#define RL_STATE_REDISPLAYING	/;"	d
RL_STATE_SEARCH	readline/include/readline/readline.h	/^#define RL_STATE_SEARCH	/;"	d
RL_STATE_SIGHANDLER	readline/include/readline/readline.h	/^#define RL_STATE_SIGHANDLER	/;"	d
RL_STATE_TERMPREPPED	readline/include/readline/readline.h	/^#define RL_STATE_TERMPREPPED	/;"	d
RL_STATE_TTYCSAVED	readline/include/readline/readline.h	/^#define RL_STATE_TTYCSAVED	/;"	d
RL_STATE_UNDOING	readline/include/readline/readline.h	/^#define RL_STATE_UNDOING	/;"	d
RL_STATE_VICMDONCE	readline/include/readline/readline.h	/^#define RL_STATE_VICMDONCE	/;"	d
RL_STATE_VIMOTION	readline/include/readline/readline.h	/^#define RL_STATE_VIMOTION	/;"	d
RL_UNSETSTATE	readline/include/readline/readline.h	/^#define RL_UNSETSTATE(/;"	d
RL_VERSION_MAJOR	readline/include/readline/readline.h	/^#define RL_VERSION_MAJOR	/;"	d
RL_VERSION_MINOR	readline/include/readline/readline.h	/^#define RL_VERSION_MINOR	/;"	d
RL_VI_CMD_MODESTR_DEFAULT	readline/include/readline/rlconf.h	/^#define RL_VI_CMD_MODESTR_DEFAULT	/;"	d
RL_VI_CMD_MODESTR_DEFLEN	readline/include/readline/rlconf.h	/^#define RL_VI_CMD_MODESTR_DEFLEN	/;"	d
RL_VI_INS_MODESTR_DEFAULT	readline/include/readline/rlconf.h	/^#define RL_VI_INS_MODESTR_DEFAULT	/;"	d
RL_VI_INS_MODESTR_DEFLEN	readline/include/readline/rlconf.h	/^#define RL_VI_INS_MODESTR_DEFLEN	/;"	d
RUBOUT	readline/include/readline/chardefs.h	/^#define RUBOUT /;"	d
SINGLE_MATCH	readline/include/readline/readline.h	/^#define SINGLE_MATCH /;"	d
SPACE	readline/include/readline/chardefs.h	/^#define SPACE /;"	d
SPACE	readline/include/readline/chardefs.h	/^#undef SPACE$/;"	d
SRC	Libft/Makefile	/^SRC = ft_atoi.c \\$/;"	m
SRC	Makefile	/^SRC = data\/data.c \\$/;"	m
STDIN_FILENO	readline/share/readline/excallback.c	/^#  define STDIN_FILENO /;"	d	file:
STREQ	readline/share/readline/hist_erasedups.c	/^#define STREQ(/;"	d	file:
STREQ	readline/share/readline/hist_purgecmd.c	/^#define STREQ(/;"	d	file:
STREQN	readline/share/readline/hist_erasedups.c	/^#define STREQN(/;"	d	file:
STREQN	readline/share/readline/hist_purgecmd.c	/^#define STREQN(/;"	d	file:
STRUCTURES_H	structures.h	/^# define STRUCTURES_H$/;"	d
SYS_INPUTRC	readline/include/readline/rlconf.h	/^#define SYS_INPUTRC /;"	d
TAB	readline/include/readline/chardefs.h	/^#define TAB /;"	d
TCBREAK	readline/share/readline/rlptytest.c	/^static enum { RESET, TCBREAK } ttystate = RESET;$/;"	e	enum:__anon2	file:
TRUE	minishell.h	/^# define TRUE /;"	d
UNCTRL	readline/include/readline/chardefs.h	/^#  undef UNCTRL$/;"	d
UNCTRL	readline/include/readline/chardefs.h	/^#define UNCTRL(/;"	d
UNDO_BEGIN	readline/include/readline/readline.h	/^enum undo_code { UNDO_DELETE, UNDO_INSERT, UNDO_BEGIN, UNDO_END };$/;"	e	enum:undo_code
UNDO_DELETE	readline/include/readline/readline.h	/^enum undo_code { UNDO_DELETE, UNDO_INSERT, UNDO_BEGIN, UNDO_END };$/;"	e	enum:undo_code
UNDO_END	readline/include/readline/readline.h	/^enum undo_code { UNDO_DELETE, UNDO_INSERT, UNDO_BEGIN, UNDO_END };$/;"	e	enum:undo_code
UNDO_INSERT	readline/include/readline/readline.h	/^enum undo_code { UNDO_DELETE, UNDO_INSERT, UNDO_BEGIN, UNDO_END };$/;"	e	enum:undo_code
UNDO_LIST	readline/include/readline/readline.h	/^} UNDO_LIST;$/;"	t	typeref:struct:undo_list
UNMETA	readline/include/readline/chardefs.h	/^#define UNMETA(/;"	d
USE_VARARGS	readline/include/readline/rlstdc.h	/^#    define USE_VARARGS$/;"	d
USE_VARARGS	readline/include/readline/rlstdc.h	/^#  define USE_VARARGS$/;"	d
VFunction	readline/include/readline/rltypedefs.h	/^typedef void VFunction () __attribute__ ((deprecated));$/;"	t
VFunction	readline/include/readline/rltypedefs.h	/^typedef void VFunction ();$/;"	t
VISIBLE_STATS	readline/include/readline/rlconf.h	/^#define VISIBLE_STATS$/;"	d
VI_MODE	readline/include/readline/rlconf.h	/^#define VI_MODE$/;"	d
WHITE	Libft/Makefile	/^WHITE='\\033[1;37m'$/;"	m
WHITE	Makefile	/^WHITE='\\033[1;37m'$/;"	m
WHT	minishell.h	/^# define WHT /;"	d
YEL	minishell.h	/^# define YEL /;"	d
YELLOW	Libft/Makefile	/^YELLOW='\\033[1;33m'$/;"	m
YELLOW	Makefile	/^YELLOW='\\033[1;33m'$/;"	m
_CHARDEFS_H_	readline/include/readline/chardefs.h	/^#define _CHARDEFS_H_$/;"	d
_FUNCTION_DEF	readline/include/readline/rltypedefs.h	/^#  define _FUNCTION_DEF$/;"	d
_HISTORY_H_	readline/include/readline/history.h	/^#define _HISTORY_H_$/;"	d
_KEYMAPS_H_	readline/include/readline/keymaps.h	/^#define _KEYMAPS_H_$/;"	d
_READLINE_H_	readline/include/readline/readline.h	/^#define _READLINE_H_$/;"	d
_RLCONF_H_	readline/include/readline/rlconf.h	/^#define _RLCONF_H_$/;"	d
_RL_FUNCTION_TYPEDEF	readline/include/readline/rltypedefs.h	/^#  define _RL_FUNCTION_TYPEDEF$/;"	d
_RL_STDC_H_	readline/include/readline/rlstdc.h	/^#define _RL_STDC_H_$/;"	d
_RL_TYPEDEFS_H_	readline/include/readline/rltypedefs.h	/^#define _RL_TYPEDEFS_H_$/;"	d
_TILDE_H_	readline/include/readline/tilde.h	/^#  define _TILDE_H_$/;"	d
__attribute__	readline/include/readline/rlstdc.h	/^#    define __attribute__(/;"	d
_funmap	readline/include/readline/readline.h	/^typedef struct _funmap {$/;"	s
_hist_entry	readline/include/readline/history.h	/^typedef struct _hist_entry {$/;"	s
_hist_state	readline/include/readline/history.h	/^typedef struct _hist_state {$/;"	s
_keymap_entry	readline/include/readline/keymaps.h	/^typedef struct _keymap_entry {$/;"	s
_rl_digit_p	readline/include/readline/chardefs.h	/^#define _rl_digit_p(/;"	d
_rl_digit_value	readline/include/readline/chardefs.h	/^#  define _rl_digit_value(/;"	d
_rl_isident	readline/include/readline/chardefs.h	/^#  define _rl_isident(/;"	d
_rl_lowercase_p	readline/include/readline/chardefs.h	/^#define _rl_lowercase_p(/;"	d
_rl_pure_alphabetic	readline/include/readline/chardefs.h	/^#define _rl_pure_alphabetic(/;"	d
_rl_to_lower	readline/include/readline/chardefs.h	/^#  define _rl_to_lower(/;"	d
_rl_to_upper	readline/include/readline/chardefs.h	/^#  define _rl_to_upper(/;"	d
_rl_uppercase_p	readline/include/readline/chardefs.h	/^#define _rl_uppercase_p(/;"	d
add_files_to_toklist	wildcards/wildcards_utils.c	/^void	add_files_to_toklist(char *buffer, int fd_temp, t_shell *shell)$/;"	f
all_path	structures.h	/^	char				**all_path;$/;"	m	struct:s_shell
all_wildcards	wildcards/wildcards_parsing.c	/^int	all_wildcards(char *buffer, t_shell *shell)$/;"	f
allocate_classic_cmd	tree/tree_utils.c	/^char	**allocate_classic_cmd(t_tok *temp)$/;"	f
allocate_operator_cmd	tree/tree_utils.c	/^char	**allocate_operator_cmd(t_tok *temp)$/;"	f
allocate_pids_and_fds	execution/exec_bonus/clean_tree.c	/^void	allocate_pids_and_fds(t_shell *shell, int count)$/;"	f
allocate_shell	data/data.c	/^int	allocate_shell(t_shell *shell, char **envp)$/;"	f
allocate_subshell	execution/exec_bonus/subshell.c	/^int	allocate_subshell(t_shell *shell, t_chained *env,$/;"	f
already	Libft/ft_putnbr_base_fd.c	/^static int	already(char *str)$/;"	f	file:
already	Libft/ft_sizebase_fd.c	/^static int	already(char *str)$/;"	f	file:
and_or_in_cmd	tree/tree_data.c	/^int	and_or_in_cmd(t_toklst *user_command)$/;"	f
and_or_in_cmd_outside_parentheses	tree/tree_data2.c	/^int	and_or_in_cmd_outside_parentheses(t_toklst *user_command)$/;"	f
and_or_jump_parentheses	tree/parentheses_jump.c	/^t_tok	*and_or_jump_parentheses(t_tok *temp)$/;"	f
and_or_reverse_jump_parentheses	tree/parentheses_jump.c	/^t_tok	*and_or_reverse_jump_parentheses(t_tok *temp)$/;"	f
antislash_norm	tokens/tokenisation.c	/^void	antislash_norm(t_tokation *tk, t_chained *env)$/;"	f
append	structures.h	/^	int					append;$/;"	m	struct:s_shell
append_newline	redirections/redirection_utils.c	/^char	*append_newline(char *limiter)$/;"	f
append_redirection	redirections/redirections.c	/^int	append_redirection(t_shell *shell, t_tok *temp)$/;"	f
argument_after_cmd	utils.c	/^int	argument_after_cmd(t_shell *shell)$/;"	f
array_command	structures.h	/^	char				**array_command;$/;"	m	struct:s_shell
array_env	structures.h	/^	char				**array_env;$/;"	m	struct:s_shell
attemptfunc	readline/include/readline/readline.h	/^  rl_completion_func_t *attemptfunc;$/;"	m	struct:readline_state
bcmd	structures.h	/^	int					bcmd;$/;"	m	struct:s_shell
bonus_errors	data/errors_bonus.c	/^int	bonus_errors(t_shell *shell)$/;"	f
buffer	readline/include/readline/readline.h	/^  char *buffer;$/;"	m	struct:readline_state
buffer_doc	structures.h	/^	char				*buffer_doc;$/;"	m	struct:s_shell
buflen	readline/include/readline/readline.h	/^  int buflen;$/;"	m	struct:readline_state
builtin_manager_bonus	bonusbuiltin/builtin_bonus.c	/^int	builtin_manager_bonus(t_shell *shell, char **command, int is_pipe)$/;"	f
catchsigs	readline/include/readline/readline.h	/^  int catchsigs;$/;"	m	struct:readline_state
catchsigwinch	readline/include/readline/readline.h	/^  int catchsigwinch;$/;"	m	struct:readline_state
cb_linehandler	readline/share/readline/rl-callbacktest.c	/^cb_linehandler (char *line)$/;"	f	file:
change_directory	builtins/dir_management.c	/^int	change_directory(t_shell *shell, const char *path)$/;"	f
change_prompt	readline/share/readline/excallback.c	/^change_prompt(void)$/;"	f
check_and_execute	main.c	/^static void	check_and_execute(t_shell *shell, int good, char **envp)$/;"	f	file:
check_permission_bonus	execution/exec_bonus/path_bonus.c	/^int	check_permission_bonus(int access_return, char **command)$/;"	f
check_valid_pipe	execution/exec_bonus/execution_bonus_utils.c	/^int	check_valid_pipe(t_branch *map)$/;"	f
checknextquote	parsing/parsing_utils.c	/^int	checknextquote(char *line, char quote, int start)$/;"	f
clean	execution/exec_bonus/clean_tree.c	/^t_branch	*clean(t_branch *temp, t_branch *map)$/;"	f
clean_between_cmds	data/free.c	/^int	clean_between_cmds(t_shell *shell)$/;"	f
clean_export_list	builtins/export_unset.c	/^int	clean_export_list(t_shell *shell, char *temp3, t_node *temp, t_node *temp2)$/;"	f
clean_memory	data/free.c	/^int	clean_memory(t_shell *shell)$/;"	f
clean_node	execution/exec_bonus/clean_tree.c	/^void	clean_node(t_branch *temp)$/;"	f
cleanstock	Libft/get_next_line.c	/^char	*cleanstock(char *stock)$/;"	f
clear_chained_lst	tokens/token_management2.c	/^void	clear_chained_lst(t_chained *lst)$/;"	f
clear_splitted_cmd	tree/tree_construction.c	/^static void	clear_splitted_cmd(t_branch *map, char mode)$/;"	f	file:
clear_toklst	tokens/token_management2.c	/^void	clear_toklst(t_toklst *lst)$/;"	f
close_fds	execution/exec/execute_execve.c	/^int	close_fds(int *fd)$/;"	f
cmd	structures.h	/^	char			**cmd;$/;"	m	struct:s_branch
cmd_block	structures.h	/^	int				cmd_block;$/;"	m	struct:s_branch
cmd_has_wildcard	wildcards/wildcards_data.c	/^int	cmd_has_wildcard(t_tok *temp)$/;"	f
com_cd	readline/share/readline/fileman.c	/^com_cd (arg)$/;"	f
com_delete	readline/share/readline/fileman.c	/^com_delete (arg)$/;"	f
com_help	readline/share/readline/fileman.c	/^com_help (arg)$/;"	f
com_list	readline/share/readline/fileman.c	/^com_list (arg)$/;"	f
com_pwd	readline/share/readline/fileman.c	/^com_pwd (ignore)$/;"	f
com_quit	readline/share/readline/fileman.c	/^com_quit (arg)$/;"	f
com_rename	readline/share/readline/fileman.c	/^com_rename (arg)$/;"	f
com_stat	readline/share/readline/fileman.c	/^com_stat (arg)$/;"	f
com_view	readline/share/readline/fileman.c	/^com_view (arg)$/;"	f
command_generator	readline/share/readline/fileman.c	/^command_generator (text, state)$/;"	f
commands	readline/share/readline/fileman.c	/^COMMAND commands[] = {$/;"	v
compare_after_wildcard	wildcards/wildcards.c	/^int	compare_after_wildcard(char *buffer, t_shell *shell)$/;"	f
compare_middle_wildcard	wildcards/wildcards.c	/^int	compare_middle_wildcard(char *buffer, t_shell *shell)$/;"	f
content	Libft/libft.h	/^	void			*content;$/;"	m	struct:s_list
control_character_bit	readline/include/readline/chardefs.h	/^#define control_character_bit /;"	d
control_character_mask	readline/include/readline/chardefs.h	/^#define control_character_mask /;"	d
control_character_threshold	readline/include/readline/chardefs.h	/^#define control_character_threshold /;"	d
copystock	Libft/get_next_line.c	/^char	*copystock(char *stock, char *buffer)$/;"	f
correct_path	structures.h	/^	char				*correct_path;$/;"	m	struct:s_shell
count_set	Libft/ft_strtrim.c	/^int	count_set(char const *s1, char const *set)$/;"	f
create_left_leaf	tree/branch_creation.c	/^t_branch	*create_left_leaf(t_branch *map)$/;"	f
create_right_leaf	tree/branch_creation.c	/^t_branch	*create_right_leaf(t_branch *map)$/;"	f
create_single_branch	tree/branch_creation.c	/^void	create_single_branch(t_tree *tree, t_toklst *user_command, t_tok *temp)$/;"	f
create_start_branch	tree/branch_creation.c	/^t_tree	*create_start_branch(t_tree *tree, t_tok *temp, t_toklst *user_command)$/;"	f
current_cmdb	structures.h	/^	int					current_cmdb;$/;"	m	struct:s_shell
current_dir_path	structures.h	/^	char				*current_dir_path;$/;"	m	struct:s_shell
custom_deprep_term_function	readline/share/readline/rlptytest.c	/^custom_deprep_term_function ()$/;"	f	file:
dad	structures.h	/^	struct s_branch	*dad;$/;"	m	struct:s_branch	typeref:struct:s_branch::s_branch
data	readline/include/readline/history.h	/^  histdata_t data;$/;"	m	struct:_hist_entry
deftext	readline/share/readline/rl.c	/^static char *deftext;$/;"	v	file:
deftext	readline/share/readline/rlevent.c	/^static char *deftext;$/;"	v	file:
delete_operator_and_infile	redirections/redirection_utils.c	/^int	delete_operator_and_infile(t_shell *shell)$/;"	f
delete_operator_and_outfile	redirections/redirection_utils.c	/^int	delete_operator_and_outfile(t_shell *shell)$/;"	f
do_nothing	signals.c	/^void	do_nothing(int num)$/;"	f
do_nothing_but_quit3	signals.c	/^void	do_nothing_but_quit3(int num)$/;"	f
doc	readline/share/readline/fileman.c	/^  char *doc;			\/* Documentation for this function.  *\/$/;"	m	struct:__anon1	file:
doc_fd	structures.h	/^	int					doc_fd[2];$/;"	m	struct:s_shell
dollarcase	tokens/tokenisation.c	/^void	dollarcase(t_tokation *tk, t_chained *env)$/;"	f
done	readline/include/readline/readline.h	/^  int done;$/;"	m	struct:readline_state
done	readline/share/readline/fileman.c	/^int done;$/;"	v
dquotej2	tokens/quotes_management.c	/^int	dquotej2(t_tok *token, int i)$/;"	f
dquotejumper	tokens/quotes_management.c	/^int	dquotejumper(t_tok *token, int i)$/;"	f
dquotep2	tokens/quotes_management.c	/^char	*dquotep2(t_tok *token, int *y, char *newvar, t_chained *env)$/;"	f
dquoteparser	tokens/quotes_management.c	/^char	*dquoteparser(t_tok *token, int i, char *newvar, t_chained *env)$/;"	f
duplicate	Libft/ft_split.c	/^static char	*duplicate(char *src, int start, int end)$/;"	f	file:
duplicate	Libft/ft_split_slash.c	/^static char	*duplicate(char *src, int start, int end)$/;"	f	file:
dupstr	readline/share/readline/fileman.c	/^dupstr (s)$/;"	f
early_out_redirection	execution/exec/pipe_utils.c	/^int	early_out_redirection(int *fd)$/;"	f
edmode	readline/include/readline/readline.h	/^  int edmode;$/;"	m	struct:readline_state
elem	structures.h	/^	t_tok				*elem;$/;"	m	struct:s_tokation
end	readline/include/readline/readline.h	/^  int end;$/;"	m	struct:readline_state
end	readline/include/readline/readline.h	/^  int start, end;		\/* Where the change took place. *\/$/;"	m	struct:undo_list
end	structures.h	/^	struct s_node		*end;$/;"	m	struct:s_chained	typeref:struct:s_chained::s_node
end	structures.h	/^	struct s_tok		*end;$/;"	m	struct:s_toklst	typeref:struct:s_toklst::s_tok
entries	readline/include/readline/history.h	/^  HIST_ENTRY **entries;		\/* Pointer to the entries themselves. *\/$/;"	m	struct:_hist_state
entryfunc	readline/include/readline/readline.h	/^  rl_compentry_func_t *entryfunc;$/;"	m	struct:readline_state
env_l	structures.h	/^	struct s_chained	*env_l;$/;"	m	struct:s_shell	typeref:struct:s_shell::s_chained
env_node	structures.h	/^	t_node				*env_node;$/;"	m	struct:s_unset
envchecker	builtins/env_utils.c	/^int	envchecker(char *line, t_chained *env)$/;"	f
envfinder	tokens/token_utils.c	/^char	*envfinder(char *line, char *newvar, t_chained *env)$/;"	f
envindex	builtins/env_utils.c	/^int	envindex(char *line, t_chained *env)$/;"	f
envvarjumper	tokens/token_utils.c	/^int	envvarjumper(t_tok *token, int i)$/;"	f
envvarparser	tokens/token_utils.c	/^char	*envvarparser(t_tok *token, int i, char *newvar, t_chained *env)$/;"	f
equal_in_string	builtins/export.c	/^int	equal_in_string(char *str)$/;"	f
err_code	structures.h	/^	int				err_code;$/;"	m	struct:s_branch
error_func	execution/exec/pipe_utils.c	/^int	error_func(int error_code)$/;"	f
errorintoken	parsing/parsing_utils.c	/^int	errorintoken(t_toklst *tokenlst, char *error)$/;"	f
event_hook	readline/share/readline/rlevent.c	/^event_hook ()$/;"	f	file:
execute_b_directory_cmd	bonusbuiltin/dir_management_bonus.c	/^int	execute_b_directory_cmd(t_shell *shell, char **command, int pipe)$/;"	f
execute_builtin_bonus	bonusbuiltin/builtin_bonus.c	/^int	execute_builtin_bonus(t_shell *shell, char **command, int pipe)$/;"	f
execute_builtin_cmd	builtins/env_management.c	/^int	execute_builtin_cmd(t_shell *shell, int i)$/;"	f
execute_command_clean_leaf	execution/exec_bonus/execution_bonus.c	/^int	execute_command_clean_leaf(t_shell *shell, char **command, int pipe)$/;"	f
execute_directory_cmd	builtins/dir_management.c	/^int	execute_directory_cmd(t_shell *shell, int i)$/;"	f
execute_line	readline/share/readline/fileman.c	/^execute_line (line)$/;"	f
execute_ls_in_tmp	wildcards/wildcards_utils.c	/^int	execute_ls_in_tmp(t_shell *shell, char **envp)$/;"	f
execute_map_dad	execution/exec_bonus/direction_execute.c	/^int	execute_map_dad(t_shell *shell, t_branch *map, t_branch *tmp)$/;"	f
execute_map_left	execution/exec_bonus/direction_execute.c	/^int	execute_map_left(t_shell *shell, t_branch *map)$/;"	f
execute_map_operator	execution/exec_bonus/direction_execute.c	/^int	execute_map_operator(t_shell *shell, t_branch *map, t_branch *tmp)$/;"	f
execute_map_right	execution/exec_bonus/direction_execute.c	/^int	execute_map_right(t_shell *shell, t_branch *map, t_branch *tmp)$/;"	f
execute_map_subshell	execution/exec_bonus/direction_execute.c	/^int	execute_map_subshell(t_branch *map, t_branch *tmp, t_shell *shell)$/;"	f
execute_node_with_cmd	execution/exec_bonus/execute_final_boss.c	/^int	execute_node_with_cmd(t_shell *shell, t_branch *map, t_branch *tmp)$/;"	f
execute_subshell	execution/exec_bonus/subshell.c	/^int	execute_subshell(t_shell *shell, t_branch *map)$/;"	f
execute_user_command	main.c	/^static void	execute_user_command(t_shell *shell, int good, char **envp)$/;"	f	file:
execution_bonus	execution/exec_bonus/execute_final_boss.c	/^int	execution_bonus(t_shell *shell, t_branch *map)$/;"	f
exit_b_shell	bonusbuiltin/env_utils_bonus.c	/^int	exit_b_shell(t_shell *shell, char **command, int pipe)$/;"	f
exit_overflow	bonusbuiltin/env_utils_bonus.c	/^static int	exit_overflow(char *str)$/;"	f	file:
exit_shell	builtins/env_utils.c	/^int	exit_shell(t_shell *shell)$/;"	f
export_ascii_sorted	builtins/export.c	/^int	export_ascii_sorted(t_tok *temp, t_chained *sorted_env)$/;"	f
export_b_ascii_sorted	bonusbuiltin/export_bonus.c	/^int	export_b_ascii_sorted(char *cmd, t_chained *sorted_env)$/;"	f
export_b_manager	bonusbuiltin/env_management_bonus.c	/^int	export_b_manager(t_shell *shell, char **command, int pipe)$/;"	f
export_b_variable	bonusbuiltin/export_bonus.c	/^int	export_b_variable(t_shell *shell, char **command)$/;"	f
export_manager	builtins/env_management.c	/^int	export_manager(t_shell *shell, int i)$/;"	f
export_node	structures.h	/^	t_node				*export_node;$/;"	m	struct:s_unset
export_variable	builtins/export.c	/^int	export_variable(t_shell *shell)$/;"	f
fcopy	readline/share/readline/rlcat.c	/^fcopy(fp)$/;"	f	file:
fd	structures.h	/^	int					**fd;$/;"	m	struct:s_shell
fgets	readline/share/readline/rl-fgets.c	/^fgets ($/;"	f
fgets_t	readline/share/readline/rl-fgets.c	/^typedef char * ( * fgets_t ) ( char * s, int n, FILE * stream ) ;$/;"	t	file:
fileman_completion	readline/share/readline/fileman.c	/^fileman_completion (text, start, end)$/;"	f
fill_basic_env	builtins/env_utils.c	/^int	fill_basic_env(t_shell *shell)$/;"	f
fill_trinary_tree	tree/tree.c	/^void	fill_trinary_tree(t_toklst *user_command, t_shell *shell)$/;"	f
final_redirection	execution/exec/pipe.c	/^int	final_redirection(t_shell *shell)$/;"	f
find_command	readline/share/readline/fileman.c	/^find_command (name)$/;"	f
find_export_args	builtins/export.c	/^t_tok	*find_export_args(t_shell *shell)$/;"	f
find_node_to_remove	builtins/unset.c	/^t_node	*find_node_to_remove(char *var_before_equal, t_chained *lst)$/;"	f
find_path	data/path.c	/^char	*find_path(int index, t_shell *shell)$/;"	f
find_path_bonus	execution/exec_bonus/path_bonus.c	/^char	*find_path_bonus(char *command, t_shell *shell)$/;"	f
find_unset_args	builtins/unset.c	/^t_tok	*find_unset_args(t_shell *shell)$/;"	f
first_parenthese_check	data/errors_bonus.c	/^static int	first_parenthese_check(t_tok *tempstart)$/;"	f	file:
firstparsing	parsing/parsing.c	/^static int	firstparsing(t_toklst *tokenlst, char *line, int start, int i)$/;"	f	file:
flags	readline/include/readline/history.h	/^  int flags;$/;"	m	struct:_hist_state
free_array	data/free.c	/^int	free_array(char **array)$/;"	f
free_increment	data/free.c	/^int	free_increment(t_increment *incr)$/;"	f
free_pids_fds	data/free.c	/^void	free_pids_fds(t_shell *shell)$/;"	f
free_subshell_data	execution/exec_bonus/execute_final_boss.c	/^void	free_subshell_data(t_branch *tmp, t_branch *map)$/;"	f
free_subshell_data2	execution/exec_bonus/execute_final_boss.c	/^void	free_subshell_data2(t_branch *tmp)$/;"	f
free_wildcards	wildcards/wildcards_data.c	/^int	free_wildcards(t_shell *shell)$/;"	f
freetab	Libft/ft_split.c	/^static void	freetab(char **recipe, int i)$/;"	f	file:
freetab	Libft/ft_split_slash.c	/^static void	freetab(char **recipe, int i)$/;"	f	file:
ft_atoi	Libft/ft_atoi.c	/^int	ft_atoi(const char *str)$/;"	f
ft_bzero	Libft/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/;"	f
ft_bzzero	Libft/get_next_line_utils.c	/^void	ft_bzzero(void *s, size_t n)$/;"	f
ft_callloc	Libft/get_next_line_utils.c	/^void	*ft_callloc(size_t count, size_t size)$/;"	f
ft_calloc	Libft/ft_calloc.c	/^void	*ft_calloc(size_t count, size_t size)$/;"	f
ft_intputchar_fd	Libft/ft_intputchar_fd.c	/^int	ft_intputchar_fd(char c, int fd)$/;"	f
ft_intputstr_fd	Libft/ft_intputstr_fd.c	/^int	ft_intputstr_fd(char *s, int fd)$/;"	f
ft_intstrlen	Libft/get_next_line_utils.c	/^int	ft_intstrlen(char *str)$/;"	f
ft_isalnum	Libft/ft_isalnum.c	/^int	ft_isalnum(int c)$/;"	f
ft_isalpha	Libft/ft_isalpha.c	/^int	ft_isalpha(int c)$/;"	f
ft_isascii	Libft/ft_isascii.c	/^int	ft_isascii(int c)$/;"	f
ft_isdigit	Libft/ft_isdigit.c	/^int	ft_isdigit(int c)$/;"	f
ft_isprint	Libft/ft_isprint.c	/^int	ft_isprint(int c)$/;"	f
ft_itoa	Libft/ft_itoa.c	/^char	*ft_itoa(int n)$/;"	f
ft_join_nextline	Libft/get_next_line_utils.c	/^char	*ft_join_nextline(char *s1, char *s2)$/;"	f
ft_lstadd_back	Libft/ft_lstadd_back.c	/^void	ft_lstadd_back(t_list **lst, t_list *new)$/;"	f
ft_lstadd_front	Libft/ft_lstadd_front.c	/^void	ft_lstadd_front(t_list **lst, t_list *new)$/;"	f
ft_lstclear	Libft/ft_lstclear.c	/^void	ft_lstclear(t_list **lst, void (*del)(void *))$/;"	f
ft_lstdelone	Libft/ft_lstdelone.c	/^void	ft_lstdelone(t_list *lst, void (*del)(void *))$/;"	f
ft_lstiter	Libft/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(void *))$/;"	f
ft_lstlast	Libft/ft_lstlast.c	/^t_list	*ft_lstlast(t_list *lst)$/;"	f
ft_lstmap	Libft/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, void *(*f)(void *), void (*del)(void *))$/;"	f
ft_lstnew	Libft/ft_lstnew.c	/^t_list	*ft_lstnew(void *content)$/;"	f
ft_lstsize	Libft/ft_lstsize.c	/^int	ft_lstsize(t_list *lst)$/;"	f
ft_memchr	Libft/ft_memchr.c	/^void	*ft_memchr(const void *memblock, int searched, size_t size)$/;"	f
ft_memcmp	Libft/ft_memcmp.c	/^int	ft_memcmp(const void *ptr1, const void *ptr2, size_t size)$/;"	f
ft_memcpy	Libft/ft_memcpy.c	/^void	*ft_memcpy(void *dest, const void *src, size_t size)$/;"	f
ft_memmove	Libft/ft_memmove.c	/^void	*ft_memmove(void *dest, const void *src, size_t size)$/;"	f
ft_memset	Libft/ft_memset.c	/^void	*ft_memset(void *ptr, int value, size_t count)$/;"	f
ft_printf	Libft/ft_printf.c	/^int	ft_printf(const char *param, ...)$/;"	f
ft_putarg	Libft/ft_printf.c	/^static int	ft_putarg(char c, va_list ap)$/;"	f	file:
ft_putchar_fd	Libft/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f
ft_putendl_fd	Libft/ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/;"	f
ft_putnbr_base_fd	Libft/ft_putnbr_base_fd.c	/^int	ft_putnbr_base_fd(long nbr, char *base, int fd)$/;"	f
ft_putnbr_fd	Libft/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f
ft_putstr_fd	Libft/ft_putstr_fd.c	/^void	ft_putstr_fd(char *s, int fd)$/;"	f
ft_sizebase_fd	Libft/ft_sizebase_fd.c	/^int	ft_sizebase_fd(size_t nbr, char *base, int fd)$/;"	f
ft_split	Libft/ft_split.c	/^char	**ft_split(char const *s, char c)$/;"	f
ft_split_slash	Libft/ft_split_slash.c	/^char	**ft_split_slash(char const *s, char c)$/;"	f
ft_strchr	Libft/ft_strchr.c	/^char	*ft_strchr(const char *str, int searched)$/;"	f
ft_strdup	Libft/ft_strdup.c	/^char	*ft_strdup(const char *str)$/;"	f
ft_strisdigit	Libft/ft_strisdigit.c	/^int	ft_strisdigit(char *str)$/;"	f
ft_striteri	Libft/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char *))$/;"	f
ft_strjoin	Libft/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f
ft_strjointok	tokens/token_management2.c	/^char	*ft_strjointok(char const *s1, char const *s2)$/;"	f
ft_strlcat	Libft/ft_strlcat.c	/^size_t	ft_strlcat(char *dest, const char *src, size_t size)$/;"	f
ft_strlcpy	Libft/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dest, const char *src, size_t size)$/;"	f
ft_strlen	Libft/ft_strlen.c	/^size_t	ft_strlen(const char *str)$/;"	f
ft_strlenequal	utils.c	/^int	ft_strlenequal(char *line)$/;"	f
ft_strmapi	Libft/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f
ft_strncmp	Libft/ft_strncmp.c	/^int	ft_strncmp(const char *str1, const char *str2, size_t length)$/;"	f
ft_strndup	utils.c	/^char	*ft_strndup(char *line, int start, int end)$/;"	f
ft_strnstr	Libft/ft_strnstr.c	/^char	*ft_strnstr(const char *big, const char *little, size_t len)$/;"	f
ft_strrchr	Libft/ft_strrchr.c	/^char	*ft_strrchr(const char *str, int searched)$/;"	f
ft_strtrim	Libft/ft_strtrim.c	/^char	*ft_strtrim(char const *s1, char const *set)$/;"	f
ft_substr	Libft/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start, size_t len)$/;"	f
ft_tklstcpy	tree/token_tree.c	/^t_toklst	*ft_tklstcpy(t_toklst *active_command)$/;"	f
ft_tolower	Libft/ft_tolower.c	/^int	ft_tolower(int c)$/;"	f
ft_toupper	Libft/ft_toupper.c	/^int	ft_toupper(int c)$/;"	f
func	readline/share/readline/fileman.c	/^  rl_icpfunc_t *func;		\/* Function to call to do the job. *\/$/;"	m	struct:__anon1	file:
function	readline/include/readline/keymaps.h	/^  rl_command_func_t *function;$/;"	m	struct:_keymap_entry
function	readline/include/readline/readline.h	/^  rl_command_func_t *function;$/;"	m	struct:_funmap
g_err	data/path.c	/^int	g_err = 0;$/;"	v
get_array_cmd_and_pipe_fds	data/commands.c	/^int	get_array_cmd_and_pipe_fds(t_shell *shell)$/;"	f
get_array_env	builtins/env_utils.c	/^char	**get_array_env(t_shell *shell)$/;"	f
get_asked_wildcards	wildcards/wildcards.c	/^int	get_asked_wildcards(char *var, t_shell *shell)$/;"	f
get_b_command	tokens/token_utils2.c	/^char	*get_b_command(t_shell *shell, int index, char **command)$/;"	f
get_bcmd	execution/exec_bonus/clean_tree.c	/^int	get_bcmd(t_toklst *user_command, t_shell *shell)$/;"	f
get_command	tokens/token_utils2.c	/^char	*get_command(t_shell *shell, int index)$/;"	f
get_command_in_tok	data/commands.c	/^char	**get_command_in_tok(t_shell *shell, int index)$/;"	f
get_correct_path	data/path.c	/^char	*get_correct_path(t_shell *shell, int index)$/;"	f
get_correct_path_bonus	execution/exec_bonus/path_bonus.c	/^char	*get_correct_path_bonus(t_shell *shell, char *command)$/;"	f
get_home	data/commands.c	/^char	*get_home(char **array_env)$/;"	f
get_nb_of_wildcard	wildcards/wildcards_data.c	/^int	get_nb_of_wildcard(char *var)$/;"	f
get_new_start_split_command	tree/tree_construction.c	/^t_tree	*get_new_start_split_command(t_shell *shell, t_branch *map)$/;"	f
get_next_line	Libft/get_next_line.c	/^char	*get_next_line(int fd)$/;"	f
get_number_of_commands	data/data.c	/^int	get_number_of_commands(t_shell *shell)$/;"	f
get_path	data/path.c	/^char	*get_path(char **array_env)$/;"	f
get_prompt	readline/share/readline/excallback.c	/^get_prompt(void)$/;"	f
get_size	Libft/ft_itoa.c	/^static int	get_size(long n)$/;"	f	file:
get_wild_middle	wildcards/wildcards.c	/^char	*get_wild_middle(char *str, int index)$/;"	f
get_wildcard_files	wildcards/wildcards.c	/^int	get_wildcard_files(t_shell *shell, t_tok *temp)$/;"	f
give_active_command	tree/tree_utils.c	/^char	**give_active_command(t_toklst *left_command)$/;"	f
give_line	Libft/get_next_line.c	/^char	*give_line(char *stock, char c)$/;"	f
go_to_branch_start	tree/tree.c	/^t_tok	*go_to_branch_start(t_toklst *user_command)$/;"	f
go_to_end	lists/list_manip.c	/^t_node	*go_to_end(t_chained *list)$/;"	f
go_to_first_closed_parenthese	tree/parentheses.c	/^t_tok	*go_to_first_closed_parenthese(t_tok *temp, int *count, int *diff)$/;"	f
go_to_home_directory	builtins/dir_management.c	/^int	go_to_home_directory(t_shell *shell)$/;"	f
go_to_last_closed_parenthese	tree/parentheses.c	/^t_tok	*go_to_last_closed_parenthese(t_tok *temp, int *count, int *diff)$/;"	f
go_to_next_operator	data/commands.c	/^t_tok	*go_to_next_operator(t_shell *shell, t_tok *tok, int index)$/;"	f
go_to_previous_directory	builtins/dir_management.c	/^int	go_to_previous_directory(t_shell *shell)$/;"	f
go_to_reverse_parenthese	tree/parentheses.c	/^t_tok	*go_to_reverse_parenthese(t_tok *temp, int *count, int *diff)$/;"	f
handler	signals.c	/^void	handler(int num)$/;"	f
here	structures.h	/^	pid_t				here;$/;"	m	struct:s_shell
heredoc_dup	redirections/redirections.c	/^int	heredoc_dup(t_shell *shell)$/;"	f
heredoc_handler	signals.c	/^void	heredoc_handler(int num)$/;"	f
heredoc_prompt	redirections/heredoc.c	/^int	heredoc_prompt(t_shell *shell)$/;"	f
heredoc_redirection	redirections/heredoc.c	/^int	heredoc_redirection(t_shell *shell, t_tok *temp)$/;"	f
hist_erasedups	readline/share/readline/hist_erasedups.c	/^hist_erasedups ()$/;"	f
hist_purgecmd	readline/share/readline/hist_purgecmd.c	/^hist_purgecmd (cmd, flags)$/;"	f
histdata_t	readline/include/readline/history.h	/^typedef char *histdata_t;$/;"	t
histdata_t	readline/include/readline/history.h	/^typedef void *histdata_t;$/;"	t
home	structures.h	/^	char				*home;$/;"	m	struct:s_shell
i	structures.h	/^	int					i;$/;"	m	struct:s_increment
i	structures.h	/^	int					i;$/;"	m	struct:s_tokation
i	structures.h	/^	int					i;$/;"	m	struct:s_unset
ignorefunc	readline/include/readline/readline.h	/^  rl_compignore_func_t *ignorefunc;$/;"	m	struct:readline_state
increment	structures.h	/^	int					increment;$/;"	m	struct:s_shell
increment_sh_level	data/data.c	/^int	increment_sh_level(t_shell *shell)$/;"	f
index_of_commands	structures.h	/^	int					index_of_commands;$/;"	m	struct:s_shell
index_of_pid	structures.h	/^	int					index_of_pid;$/;"	m	struct:s_shell
index_of_pipes	structures.h	/^	int					index_of_pipes;$/;"	m	struct:s_shell
inf	readline/include/readline/readline.h	/^  FILE *inf;$/;"	m	struct:readline_state
infile	structures.h	/^	int					infile;$/;"	m	struct:s_shell
infile_redirection	redirections/redirections.c	/^int	infile_redirection(t_shell *shell, t_tok *temp)$/;"	f
infile_redirection_parsing	redirections/redirection_parsing.c	/^int	infile_redirection_parsing(t_shell *shell)$/;"	f
init_readline	readline/share/readline/rlptytest.c	/^init_readline (int inputfd, int outputfd) $/;"	f	file:
initialize_readline	readline/share/readline/fileman.c	/^initialize_readline ()$/;"	f
initialize_subvariables	execution/exec_bonus/subshell.c	/^int	initialize_subvariables(t_shell *shell)$/;"	f
initialize_variables	data/data.c	/^int	initialize_variables(t_shell *shell)$/;"	f
inside_redirection	execution/exec/pipe_utils.c	/^int	inside_redirection(int *fd)$/;"	f
insmode	readline/include/readline/readline.h	/^  int insmode;$/;"	m	struct:readline_state
invert_case_line	readline/share/readline/manexamp.c	/^invert_case_line (count, key)$/;"	f
is_and	execution/exec_bonus/execution_utils.c	/^int	is_and(char *cmd)$/;"	f
is_and_or	tree/tree_data.c	/^int	is_and_or(char *str)$/;"	f
is_builtin_command_bonus	execution/exec_bonus/execution_bonus.c	/^int	is_builtin_command_bonus(char **command)$/;"	f
is_empty	lists/list_utils.c	/^int	is_empty(t_chained *list)$/;"	f
is_emptytok	tokens/token_utils2.c	/^int	is_emptytok(t_toklst *list)$/;"	f
is_infile_redirection	redirections/redirection_utils.c	/^int	is_infile_redirection(t_toklst *user_command)$/;"	f
is_last_command	execution/exec_bonus/execution_bonus_utils.c	/^int	is_last_command(t_branch *map, t_branch *searched)$/;"	f
is_last_pipe_command	execution/exec_bonus/execution_bonus_utils.c	/^int	is_last_pipe_command(t_branch *map)$/;"	f
is_matching_file	wildcards/wildcards_parsing.c	/^int	is_matching_file(char *buffer, t_shell *shell)$/;"	f
is_operator	tree/tree_data.c	/^int	is_operator(char *str)$/;"	f
is_or	execution/exec_bonus/execution_utils.c	/^int	is_or(char *cmd)$/;"	f
is_outfile_redirection	redirections/redirection_utils.c	/^int	is_outfile_redirection(t_toklst *user_command)$/;"	f
is_parenthese	data/errors_bonus.c	/^static int	is_parenthese(char *str)$/;"	f	file:
is_parenthese	execution/exec_bonus/clean_tree.c	/^int	is_parenthese(char *str)$/;"	f
is_pipe	execution/exec_bonus/execution_utils.c	/^int	is_pipe(char *cmd)$/;"	f
is_sep	parsing/parsing_utils.c	/^int	is_sep(char c)$/;"	f
is_set	Libft/ft_strtrim.c	/^static int	is_set(char c, char const *set)$/;"	f	file:
is_wspace	parsing/parsing_utils.c	/^int	is_wspace(char c)$/;"	f
isxdigit	readline/include/readline/chardefs.h	/^#  define isxdigit(/;"	d
itoa_is_neg	Libft/ft_itoa.c	/^static char	*itoa_is_neg(long n)$/;"	f	file:
itoa_is_pos	Libft/ft_itoa.c	/^static char	*itoa_is_pos(long n)$/;"	f	file:
itoa_sh	structures.h	/^	char				*itoa_sh;$/;"	m	struct:s_increment
join_without_leaks	tokens/quotes_management2.c	/^char	*join_without_leaks(char *newvar, char *temp)$/;"	f
join_without_leaks2	tokens/quotes_management2.c	/^char	*join_without_leaks2(char *newvar, char *temp)$/;"	f
jump_next_wildcard	wildcards/wildcards_utils.c	/^int	jump_next_wildcard(char *str, int index)$/;"	f
jump_previous_wildcard	wildcards/wildcards_utils.c	/^int	jump_previous_wildcard(char *str, int index)$/;"	f
jump_text	parsing/parsing.c	/^static int	jump_text(char *line, int i)$/;"	f	file:
jump_wspace	parsing/parsing_utils.c	/^int	jump_wspace(char *line, int i)$/;"	f
kmap	readline/include/readline/readline.h	/^  Keymap kmap;$/;"	m	struct:readline_state
kseq	readline/include/readline/readline.h	/^  char *kseq;$/;"	m	struct:readline_state
kseqlen	readline/include/readline/readline.h	/^  int kseqlen;$/;"	m	struct:readline_state
largest_char	readline/include/readline/chardefs.h	/^#define largest_char /;"	d
last_index	structures.h	/^	int					last_index;$/;"	m	struct:s_shell
lastfunc	readline/include/readline/readline.h	/^  rl_command_func_t *lastfunc;$/;"	m	struct:readline_state
left	structures.h	/^	struct s_branch	*left;$/;"	m	struct:s_branch	typeref:struct:s_branch::s_branch
left_command	structures.h	/^	struct s_toklst	*left_command;$/;"	m	struct:s_branch	typeref:struct:s_branch::s_toklst
length	readline/include/readline/history.h	/^  int length;			\/* Number of elements within this array. *\/$/;"	m	struct:_hist_state
limiter_doc	structures.h	/^	char				*limiter_doc;$/;"	m	struct:s_shell
line	readline/include/readline/history.h	/^  char *line;$/;"	m	struct:_hist_entry
line_buf	readline/share/readline/excallback.c	/^char prompt_buf[40], line_buf[256];$/;"	v
line_in_stock	Libft/get_next_line_utils.c	/^int	line_in_stock(char *str)$/;"	f
line_read	readline/share/readline/manexamp.c	/^static char *line_read = (char *)NULL;$/;"	v	file:
line_readed	structures.h	/^	char				*line_readed;$/;"	m	struct:s_shell
list_copy	lists/list_utils.c	/^t_chained	*list_copy(t_chained *list)$/;"	f
ls_cmd	structures.h	/^	char				**ls_cmd;$/;"	m	struct:s_shell
macro	readline/include/readline/readline.h	/^  char *macro;$/;"	m	struct:readline_state
main	main.c	/^int	main(int ac, char **av, char **envp)$/;"	f
main	readline/share/readline/excallback.c	/^main()$/;"	f
main	readline/share/readline/fileman.c	/^main (argc, argv)$/;"	f
main	readline/share/readline/hist_erasedups.c	/^main (argc, argv)$/;"	f
main	readline/share/readline/hist_purgecmd.c	/^main (argc, argv)$/;"	f
main	readline/share/readline/histexamp.c	/^main (argc, argv)$/;"	f
main	readline/share/readline/rl-callbacktest.c	/^main (int c, char **v)$/;"	f
main	readline/share/readline/rl.c	/^main (argc, argv)$/;"	f
main	readline/share/readline/rlbasic.c	/^main (int c, char **v)$/;"	f
main	readline/share/readline/rlcat.c	/^main (argc, argv)$/;"	f
main	readline/share/readline/rlevent.c	/^main (argc, argv)$/;"	f
main	readline/share/readline/rlkeymaps.c	/^main (int c, char **v)$/;"	f
main	readline/share/readline/rlptytest.c	/^main()$/;"	f
main	readline/share/readline/rltest.c	/^main ()$/;"	f
main	readline/share/readline/rlversion.c	/^main()$/;"	f
main_loop	readline/share/readline/rlptytest.c	/^main_loop(void)$/;"	f	file:
map	structures.h	/^	struct s_branch	*map;$/;"	m	struct:s_tree	typeref:struct:s_tree::s_branch
mark	readline/include/readline/readline.h	/^  int mark;$/;"	m	struct:readline_state
masterfd	readline/share/readline/rlptytest.c	/^static int masterfd = -1;$/;"	v	file:
menuentryfunc	readline/include/readline/readline.h	/^  rl_compentry_func_t *menuentryfunc;$/;"	m	struct:readline_state
meta_character_bit	readline/include/readline/chardefs.h	/^#define meta_character_bit /;"	d
meta_character_threshold	readline/include/readline/chardefs.h	/^#define meta_character_threshold /;"	d
multi_cmd	structures.h	/^	char				***multi_cmd;$/;"	m	struct:s_shell
my_fgets_completion	readline/share/readline/rl-fgets.c	/^my_fgets_completion ($/;"	f	file:
my_fgets_debug_flag	readline/share/readline/rl-fgets.c	/^static int     my_fgets_debug_flag      = 0    ;$/;"	v	file:
my_fgets_debug_toggle	readline/share/readline/rl-fgets.c	/^my_fgets_debug_toggle ($/;"	f	file:
my_fgets_dump	readline/share/readline/rl-fgets.c	/^my_fgets_dump ($/;"	f	file:
my_fgets_generator	readline/share/readline/rl-fgets.c	/^my_fgets_generator ($/;"	f	file:
my_fgets_lookup	readline/share/readline/rl-fgets.c	/^my_fgets_lookup ($/;"	f	file:
my_fgets_names	readline/share/readline/rl-fgets.c	/^static char ** my_fgets_names           = NULL ;$/;"	v	file:
my_fgets_number_of_names	readline/share/readline/rl-fgets.c	/^static int     my_fgets_number_of_names = 0    ;$/;"	v	file:
my_fgets_reset	readline/share/readline/rl-fgets.c	/^my_fgets_reset ($/;"	f	file:
name	readline/include/readline/readline.h	/^  const char *name;$/;"	m	struct:_funmap
name	readline/share/readline/fileman.c	/^  char *name;			\/* User printable name of the function. *\/$/;"	m	struct:__anon1	file:
nb_elem	structures.h	/^	int					nb_elem;$/;"	m	struct:s_chained
nb_elem	structures.h	/^	int					nb_elem;$/;"	m	struct:s_toklst
nb_of_fds_to_malloc	structures.h	/^	int					nb_of_fds_to_malloc;$/;"	m	struct:s_shell
nb_of_pipes	structures.h	/^	int					nb_of_pipes;$/;"	m	struct:s_shell
nb_of_sub	structures.h	/^	int					nb_of_sub;$/;"	m	struct:s_shell
new_back_node	lists/list_manip.c	/^t_chained	*new_back_node(t_chained *list, char *line)$/;"	f
new_back_tok	tokens/token_management.c	/^t_toklst	*new_back_tok(t_toklst *tokenlst, char *line, int start, int end)$/;"	f
new_back_tok_q	tokens/token_management.c	/^t_toklst	*new_back_tok_q(t_toklst *tokenlst, char *line, int start, int end)$/;"	f
new_back_tok_wq	tree/token_tree.c	/^t_toklst	*new_back_tok_wq(t_toklst *tokenlst, char *line, int quote)$/;"	f
new_current_node	lists/list_manip2.c	/^t_chained	*new_current_node(t_chained *lst, int index, char *variable)$/;"	f
new_front_node	lists/list_manip.c	/^t_chained	*new_front_node(t_chained *list, char *line)$/;"	f
new_front_tok	tokens/token_management.c	/^t_toklst	*new_front_tok(t_toklst *list, char *line)$/;"	f
new_front_tok_wq	tree/token_tree.c	/^t_toklst	*new_front_tok_wq(t_toklst *tokenlst, char *line, int quote)$/;"	f
new_sh_level	structures.h	/^	char				*new_sh_level;$/;"	m	struct:s_increment
new_wildcard_tok	tokens/token_wildcard.c	/^t_toklst	*new_wildcard_tok(t_toklst *tokenlst, char *buffer)$/;"	f
newvar	structures.h	/^	char				*newvar;$/;"	m	struct:s_tokation
next	Libft/libft.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list::s_list
next	readline/include/readline/readline.h	/^  struct undo_list *next;$/;"	m	struct:undo_list	typeref:struct:undo_list::undo_list
next	structures.h	/^	struct s_node		*next;$/;"	m	struct:s_node	typeref:struct:s_node::s_node
next	structures.h	/^	struct s_tok		*next;$/;"	m	struct:s_tok	typeref:struct:s_tok::s_tok
no_wildcard_before	wildcards/wildcards_data.c	/^int	no_wildcard_before(char *str, int index)$/;"	f
norm_checker	tokens/token_checker.c	/^static int	norm_checker(t_tok *tok)$/;"	f	file:
norm_cleaning	execution/exec_bonus/execute_final_boss.c	/^void	norm_cleaning(t_branch *map)$/;"	f
norm_errors	tokens/tokenisation.c	/^void	norm_errors(t_tokation *tk, t_toklst *tokenlst)$/;"	f
norm_parsing	parsing/parsing.c	/^static int	norm_parsing(t_toklst *tokenlst, char *line, int start, int i)$/;"	f	file:
norm_unset	builtins/unset.c	/^void	norm_unset(t_unset *uns, t_shell *shell)$/;"	f
norm_waitpid	execution/exec_bonus/execute_final_boss.c	/^void	norm_waitpid(t_branch *tmp, t_shell *shell)$/;"	f
not_execute_builtin	execution/exec_bonus/execution_utils.c	/^int	not_execute_builtin(t_shell *shell, char **command, char *tmp,$/;"	f
null_list	lists/list_utils.c	/^t_chained	*null_list(void)$/;"	f
number_of_parentheses	tree/parentheses.c	/^int	number_of_parentheses(t_tok *temp)$/;"	f
offset	readline/include/readline/history.h	/^  int offset;			\/* The location pointer within this array. *\/$/;"	m	struct:_hist_state
old_lflag	readline/share/readline/excallback.c	/^tcflag_t old_lflag;$/;"	v
old_vtime	readline/share/readline/excallback.c	/^cc_t     old_vtime;$/;"	v
one_wildcard_only	wildcards/wildcards_parsing.c	/^int	one_wildcard_only(char *buffer, t_shell *shell)$/;"	f
operator_in_cmd	tree/tree_data.c	/^int	operator_in_cmd(t_toklst *user_command)$/;"	f
operator_jump_parentheses	tree/parentheses_jump.c	/^t_tok	*operator_jump_parentheses(t_tok *temp)$/;"	f
option_n	utils.c	/^int	option_n(char **command, int i)$/;"	f
option_njump	utils.c	/^int	option_njump(char **command, int i)$/;"	f
out	structures.h	/^	int					out;$/;"	m	struct:s_shell
outf	readline/include/readline/readline.h	/^  FILE *outf;$/;"	m	struct:readline_state
outfile	structures.h	/^	int					outfile;$/;"	m	struct:s_shell
outfile_redirection	redirections/redirections.c	/^int	outfile_redirection(t_shell *shell, t_tok *temp)$/;"	f
outfile_redirection_parsing	redirections/redirection_parsing.c	/^int	outfile_redirection_parsing(t_shell *shell)$/;"	f
parenthese_in_command	tree/tree_data2.c	/^int	parenthese_in_command(t_toklst *user_command)$/;"	f
parse_wildcard	wildcards/wildcards_parsing.c	/^int	parse_wildcard(t_shell *shell, char **envp, t_tok *temp)$/;"	f
pendingin	readline/include/readline/readline.h	/^  int pendingin;$/;"	m	struct:readline_state
pid	structures.h	/^	pid_t				*pid;$/;"	m	struct:s_shell
pipe_in_cmd_outside_parentheses	tree/tree_data2.c	/^int	pipe_in_cmd_outside_parentheses(t_toklst *user_command)$/;"	f
pipe_in_command	builtins/env_management.c	/^int	pipe_in_command(t_toklst *cmd)$/;"	f
pipe_jump_parentheses	tree/parentheses_jump.c	/^t_tok	*pipe_jump_parentheses(t_tok *temp)$/;"	f
pipe_reverse_jump_parentheses	tree/parentheses_jump.c	/^t_tok	*pipe_reverse_jump_parentheses(t_tok *temp)$/;"	f
plusminus	Libft/ft_putnbr_base_fd.c	/^static int	plusminus(char *str)$/;"	f	file:
plusminus	Libft/ft_sizebase_fd.c	/^static int	plusminus(char *str)$/;"	f	file:
point	readline/include/readline/readline.h	/^  int point;$/;"	m	struct:readline_state
prev	structures.h	/^	struct s_node		*prev;$/;"	m	struct:s_node	typeref:struct:s_node::s_node
prev	structures.h	/^	struct s_tok		*prev;$/;"	m	struct:s_tok	typeref:struct:s_tok::s_tok
previous_dir_path	structures.h	/^	char				*previous_dir_path;$/;"	m	struct:s_shell
print_b_echo	bonusbuiltin/env_management_bonus.c	/^int	print_b_echo(char **command, t_shell *shell)$/;"	f
print_echo	builtins/env_management.c	/^int	print_echo(char **command, t_shell *shell)$/;"	f
print_export	builtins/export_unset.c	/^int	print_export(t_shell *shell)$/;"	f
print_list	lists/list_utils.c	/^void	print_list(t_chained *list)$/;"	f
print_pwd_linux	builtins/dir_management.c	/^int	print_pwd_linux(t_shell *shell)$/;"	f
print_toklst	tokens/token_utils2.c	/^void	print_toklst(t_toklst *list)$/;"	f
printdot	execution/exec_bonus/path_bonus.c	/^int	printdot(void)$/;"	f
printnoaccess	execution/exec_bonus/subshell.c	/^int	printnoaccess(char **command)$/;"	f
prio	structures.h	/^	int					prio;$/;"	m	struct:s_tok
process_line	readline/share/readline/excallback.c	/^process_line(char *line)$/;"	f
progname	readline/share/readline/fileman.c	/^char *progname;$/;"	v
progname	readline/share/readline/rl.c	/^static char *progname;$/;"	v	file:
progname	readline/share/readline/rlcat.c	/^static char *progname;$/;"	v	file:
progname	readline/share/readline/rlevent.c	/^static char *progname;$/;"	v	file:
prompt	readline/include/readline/readline.h	/^  char *prompt;$/;"	m	struct:readline_state
prompt	readline/share/readline/excallback.c	/^int prompt = 1;$/;"	v
prompt	readline/share/readline/rl-callbacktest.c	/^const char *prompt = "rltest$ ";$/;"	v
prompt	structures.h	/^	const char			*prompt;$/;"	m	struct:s_shell
prompt_buf	readline/share/readline/excallback.c	/^char prompt_buf[40], line_buf[256];$/;"	v
put_quotes_to_export	builtins/export_unset.c	/^void	put_quotes_to_export(char *variable)$/;"	f
quote	structures.h	/^	int					quote;$/;"	m	struct:s_tok
readbuff_copystock	Libft/get_next_line.c	/^char	*readbuff_copystock(int fd, char *stock)$/;"	f
readline_input	readline/share/readline/rlptytest.c	/^readline_input()$/;"	f	file:
readline_manager	main.c	/^int	readline_manager(t_shell *shell)$/;"	f
readline_state	readline/include/readline/readline.h	/^struct readline_state {$/;"	s
redirection_bonus	execution/exec_bonus/execution_bonus.c	/^int	redirection_bonus(t_shell *shell)$/;"	f
reinitializer	main.c	/^void	reinitializer(t_shell *shell)$/;"	f
remove_back_node	lists/list_manip.c	/^t_chained	*remove_back_node(t_chained *list)$/;"	f
remove_back_tok	tokens/token_management2.c	/^t_toklst	*remove_back_tok(t_toklst *list)$/;"	f
remove_ctrlc	signals.c	/^void	remove_ctrlc(int mode)$/;"	f
remove_current_node	lists/list_manip2.c	/^t_node	*remove_current_node(t_node *node, t_chained *lst)$/;"	f
remove_current_tok	tokens/token_management.c	/^t_tok	*remove_current_tok(t_tok *tok, t_toklst *list)$/;"	f
remove_front_node	lists/list_manip.c	/^t_chained	*remove_front_node(t_chained *list)$/;"	f
remove_front_tok	tokens/token_management2.c	/^t_toklst	*remove_front_tok(t_toklst *list)$/;"	f
remove_newline_from_buffer	wildcards/wildcards_utils.c	/^char	*remove_newline_from_buffer(char *buffer)$/;"	f
remove_parenthesis	tree/tree.c	/^static void	remove_parenthesis(t_toklst *user_command)$/;"	f	file:
remove_wildcard_tok	tokens/token_wildcard.c	/^t_tok	*remove_wildcard_tok(t_toklst *tokenlst, t_tok *temp)$/;"	f
replace_by_env	redirections/heredoc.c	/^char	*replace_by_env(t_shell *shell, char *buffer)$/;"	f
reserved	readline/include/readline/readline.h	/^  char reserved[64];$/;"	m	struct:readline_state
reverse_number_of_parentheses	tree/parentheses.c	/^int	reverse_number_of_parentheses(t_tok *temp)$/;"	f
right	structures.h	/^	struct s_branch	*right;$/;"	m	struct:s_branch	typeref:struct:s_branch::s_branch
right_command	structures.h	/^	struct s_toklst	*right_command;$/;"	m	struct:s_branch	typeref:struct:s_branch::s_toklst
rl_command_func_t	readline/include/readline/rltypedefs.h	/^typedef int rl_command_func_t PARAMS((int, int));$/;"	t
rl_compdisp_func_t	readline/include/readline/rltypedefs.h	/^typedef void rl_compdisp_func_t PARAMS((char **, int, int));$/;"	t
rl_compentry_func_t	readline/include/readline/rltypedefs.h	/^typedef char *rl_compentry_func_t PARAMS((const char *, int));$/;"	t
rl_compignore_func_t	readline/include/readline/rltypedefs.h	/^typedef int rl_compignore_func_t PARAMS((char **));$/;"	t
rl_completion_func_t	readline/include/readline/rltypedefs.h	/^typedef char **rl_completion_func_t PARAMS((const char *, int, int));$/;"	t
rl_cpcpfunc_t	readline/include/readline/rltypedefs.h	/^typedef char *rl_cpcpfunc_t PARAMS((char  *));$/;"	t
rl_cpcppfunc_t	readline/include/readline/rltypedefs.h	/^typedef char *rl_cpcppfunc_t PARAMS((char  **));$/;"	t
rl_cpifunc_t	readline/include/readline/rltypedefs.h	/^typedef char *rl_cpifunc_t PARAMS((int));$/;"	t
rl_cpvfunc_t	readline/include/readline/rltypedefs.h	/^typedef char *rl_cpvfunc_t PARAMS((void));$/;"	t
rl_dequote_func_t	readline/include/readline/rltypedefs.h	/^typedef char *rl_dequote_func_t PARAMS((char *, int));$/;"	t
rl_getc_func_t	readline/include/readline/rltypedefs.h	/^typedef int rl_getc_func_t PARAMS((FILE *));$/;"	t
rl_gets	readline/share/readline/manexamp.c	/^rl_gets ()$/;"	f
rl_hook_func_t	readline/include/readline/rltypedefs.h	/^typedef int rl_hook_func_t PARAMS((void));$/;"	t
rl_icpfunc_t	readline/include/readline/rltypedefs.h	/^typedef int rl_icpfunc_t PARAMS((char *));$/;"	t
rl_icppfunc_t	readline/include/readline/rltypedefs.h	/^typedef int rl_icppfunc_t PARAMS((char **));$/;"	t
rl_intfunc_t	readline/include/readline/rltypedefs.h	/^typedef int rl_intfunc_t PARAMS((int));$/;"	t
rl_ivoidfunc_t	readline/include/readline/rltypedefs.h	/^#define rl_ivoidfunc_t /;"	d
rl_linebuf_func_t	readline/include/readline/rltypedefs.h	/^typedef int rl_linebuf_func_t PARAMS((char *, int));$/;"	t
rl_quote_func_t	readline/include/readline/rltypedefs.h	/^typedef char *rl_quote_func_t PARAMS((char *, int, char *));$/;"	t
rl_symbolic_link_hook	readline/include/readline/readline.h	/^#define rl_symbolic_link_hook /;"	d
rl_vcpfunc_t	readline/include/readline/rltypedefs.h	/^typedef void rl_vcpfunc_t PARAMS((char *));$/;"	t
rl_vcppfunc_t	readline/include/readline/rltypedefs.h	/^typedef void rl_vcppfunc_t PARAMS((char **));$/;"	t
rl_vintfunc_t	readline/include/readline/rltypedefs.h	/^typedef void rl_vintfunc_t PARAMS((int));$/;"	t
rl_voidfunc_t	readline/include/readline/rltypedefs.h	/^typedef void rl_voidfunc_t PARAMS((void));$/;"	t
rlctx_send_user_command	readline/share/readline/rlptytest.c	/^rlctx_send_user_command(char *line)$/;"	f	file:
rlstate	readline/include/readline/readline.h	/^  int rlstate;$/;"	m	struct:readline_state
running	readline/share/readline/rl-callbacktest.c	/^int running, sigwinch_received;$/;"	v
s_branch	structures.h	/^typedef struct s_branch$/;"	s
s_chained	structures.h	/^typedef struct s_chained$/;"	s
s_increment	structures.h	/^typedef struct s_increment$/;"	s
s_list	Libft/libft.h	/^typedef struct s_list$/;"	s
s_node	structures.h	/^typedef struct s_node$/;"	s
s_shell	structures.h	/^typedef struct s_shell$/;"	s
s_tok	structures.h	/^typedef struct s_tok$/;"	s
s_tokation	structures.h	/^typedef struct s_tokation$/;"	s
s_toklst	structures.h	/^typedef struct s_toklst$/;"	s
s_tree	structures.h	/^typedef struct s_tree$/;"	s
s_unset	structures.h	/^typedef struct s_unset$/;"	s
save_termios	readline/share/readline/rlptytest.c	/^static struct termios save_termios;$/;"	v	typeref:struct:termios	file:
saved_stdin	structures.h	/^	int					saved_stdin;$/;"	m	struct:s_shell
saved_stdout	structures.h	/^	int					saved_stdout;$/;"	m	struct:s_shell
second_parenthese_check	data/errors_bonus.c	/^static int	second_parenthese_check(t_tok *tempstart)$/;"	f	file:
secondparsing	parsing/parsing.c	/^static int	secondparsing(t_toklst *tokenlst, char *line, int start, int i)$/;"	f	file:
set_deftext	readline/share/readline/rl.c	/^set_deftext ()$/;"	f	file:
set_deftext	readline/share/readline/rlevent.c	/^set_deftext ()$/;"	f	file:
sh	structures.h	/^	int					sh;$/;"	m	struct:s_increment
sh_level	structures.h	/^	char				*sh_level;$/;"	m	struct:s_increment
sighandler	readline/share/readline/rl-callbacktest.c	/^sighandler (int sig)$/;"	f	file:
sigint	readline/share/readline/rlptytest.c	/^sigint (s)$/;"	f
sigwinch	readline/share/readline/rlptytest.c	/^sigwinch (s)$/;"	f
sigwinch_received	readline/share/readline/rl-callbacktest.c	/^int running, sigwinch_received;$/;"	v
size	readline/include/readline/history.h	/^  int size;			\/* Number of slots allocated to this array. *\/$/;"	m	struct:_hist_state
size	readline/share/readline/rlptytest.c	/^static struct winsize size;$/;"	v	typeref:struct:winsize	file:
slash_manager_bonus	execution/exec_bonus/path_bonus.c	/^int	slash_manager_bonus(char **command)$/;"	f
slavefd	readline/share/readline/rlptytest.c	/^static int slavefd;$/;"	v	file:
sort_list	lists/list_utils.c	/^t_chained	*sort_list(t_chained *list)$/;"	f
sorted_env_l	structures.h	/^	struct s_chained	*sorted_env_l;$/;"	m	struct:s_shell	typeref:struct:s_shell::s_chained
split_left	tree/tree_utils.c	/^t_toklst	*split_left(t_toklst *active_command)$/;"	f
split_right	tree/tree_utils.c	/^t_toklst	*split_right(t_toklst *active_command)$/;"	f
splitcount	Libft/ft_split.c	/^static int	splitcount(const char *str, char c)$/;"	f	file:
splitcount	Libft/ft_split_slash.c	/^static int	splitcount(const char *str, char c)$/;"	f	file:
splitter	Libft/ft_split.c	/^char	**splitter(char const *s, char c, char **recipe)$/;"	f
splitter	Libft/ft_split_slash.c	/^static char	**splitter(char const *s, char c, char **recipe)$/;"	f	file:
squotejumper	tokens/quotes_management2.c	/^int	squotejumper(t_tok *token, int i)$/;"	f
squoteparser	tokens/quotes_management2.c	/^char	*squoteparser(t_tok *token, int i, char *newvar)$/;"	f
start	readline/include/readline/readline.h	/^  int start, end;		\/* Where the change took place. *\/$/;"	m	struct:undo_list
start	structures.h	/^	int					start;$/;"	m	struct:s_tokation
start	structures.h	/^	struct s_branch	*start;$/;"	m	struct:s_tree	typeref:struct:s_tree::s_branch
start	structures.h	/^	struct s_node		*start;$/;"	m	struct:s_chained	typeref:struct:s_chained::s_node
start	structures.h	/^	struct s_tok		*start;$/;"	m	struct:s_toklst	typeref:struct:s_toklst::s_tok
start_when_and_or	tree/tree.c	/^static t_tok	*start_when_and_or(t_tok *temp)$/;"	f	file:
start_when_pipe	tree/tree.c	/^static t_tok	*start_when_pipe(t_tok *temp)$/;"	f	file:
stdcat	readline/share/readline/rlcat.c	/^stdcat (argc, argv)$/;"	f
string_is_wildcard	wildcards/wildcards_data.c	/^int	string_is_wildcard(char *str)$/;"	f
stripwhite	readline/share/readline/fileman.c	/^stripwhite (string)$/;"	f
subshell	execution/exec_bonus/subshell.c	/^int	subshell(t_toklst *user_command, t_chained *env, t_chained *export)$/;"	f
subshell	structures.h	/^	struct s_toklst	*subshell;$/;"	m	struct:s_branch	typeref:struct:s_branch::s_toklst
syscom	readline/share/readline/fileman.c	/^static char syscom[1024];$/;"	v	file:
t_branch	structures.h	/^}				t_branch;$/;"	t	typeref:struct:s_branch
t_branchcpy	execution/exec_bonus/execution_bonus_utils.c	/^t_branch	*t_branchcpy(t_branch *map)$/;"	f
t_chained	structures.h	/^}				t_chained;$/;"	t	typeref:struct:s_chained
t_increment	structures.h	/^}				t_increment;$/;"	t	typeref:struct:s_increment
t_list	Libft/libft.h	/^}					t_list;$/;"	t	typeref:struct:s_list
t_node	structures.h	/^}				t_node;$/;"	t	typeref:struct:s_node
t_shell	structures.h	/^}				t_shell;$/;"	t	typeref:struct:s_shell
t_tok	structures.h	/^}				t_tok;$/;"	t	typeref:struct:s_tok
t_tokation	structures.h	/^}				t_tokation;$/;"	t	typeref:struct:s_tokation
t_toklst	structures.h	/^}				t_toklst;$/;"	t	typeref:struct:s_toklst
t_tree	structures.h	/^}				t_tree;$/;"	t	typeref:struct:s_tree
t_unset	structures.h	/^}				t_unset;$/;"	t	typeref:struct:s_unset
temp	structures.h	/^	char				*temp;$/;"	m	struct:s_tokation
temp	structures.h	/^	t_node				*temp;$/;"	m	struct:s_increment
temp	structures.h	/^	t_tok				*temp;$/;"	m	struct:s_unset
term	readline/share/readline/excallback.c	/^struct termios term;$/;"	v	typeref:struct:termios
text	readline/include/readline/readline.h	/^  char *text;			\/* The text to insert, if undoing a delete. *\/$/;"	m	struct:undo_list
tilde_and_classicnorm	tokens/tokenisation.c	/^void	tilde_and_classicnorm(t_tokation *tk, t_chained *env)$/;"	f
tilde_hook_func_t	readline/include/readline/tilde.h	/^typedef char *tilde_hook_func_t PARAMS((char *));$/;"	t
timestamp	readline/include/readline/history.h	/^  char *timestamp;		\/* char * rather than time_t for read\/write *\/$/;"	m	struct:_hist_entry
tkion	structures.h	/^	struct s_tokation	*tkion;$/;"	m	struct:s_shell	typeref:struct:s_shell::s_tokation
token_checker	tokens/token_checker.c	/^int	token_checker(t_shell *shell)$/;"	f
token_norm_parsing	tokens/token_utils.c	/^void	token_norm_parsing(t_tokation *tk, t_chained *env)$/;"	f
token_parsing	parsing/parsing.c	/^void	token_parsing(t_toklst *tokenlst, char *line)$/;"	f
tokenisation	tokens/tokenisation.c	/^int	tokenisation(t_toklst *tokenlst, t_chained *env)$/;"	f
too_dangerous	readline/share/readline/fileman.c	/^too_dangerous (caller)$/;"	f
tree	structures.h	/^	struct s_tree		*tree;$/;"	m	struct:s_shell	typeref:struct:s_shell::s_tree
tty_cbreak	readline/share/readline/rlptytest.c	/^int tty_cbreak(int fd){$/;"	f
tty_off_xon_xoff	readline/share/readline/rlptytest.c	/^tty_off_xon_xoff (int fd)$/;"	f
tty_reset	readline/share/readline/rlptytest.c	/^int tty_reset(int fd)$/;"	f
ttystate	readline/share/readline/rlptytest.c	/^static enum { RESET, TCBREAK } ttystate = RESET;$/;"	v	typeref:enum:__anon2	file:
two_wildcards	wildcards/wildcards_parsing.c	/^int	two_wildcards(char *buffer, t_shell *shell)$/;"	f
type	readline/include/readline/keymaps.h	/^  char type;$/;"	m	struct:_keymap_entry
ul	readline/include/readline/readline.h	/^  UNDO_LIST *ul;$/;"	m	struct:readline_state
undo_code	readline/include/readline/readline.h	/^enum undo_code { UNDO_DELETE, UNDO_INSERT, UNDO_BEGIN, UNDO_END };$/;"	g
undo_list	readline/include/readline/readline.h	/^typedef struct undo_list {$/;"	s
unset_b_variable	bonusbuiltin/unset_bonus.c	/^int	unset_b_variable(t_shell *shell, char **command)$/;"	f
unset_variable	builtins/unset.c	/^int	unset_variable(t_shell *shell)$/;"	f
update_oldpwd	builtins/dir_utils.c	/^int	update_oldpwd(t_shell *shell, t_chained *list)$/;"	f
update_pwd	builtins/dir_utils.c	/^int	update_pwd(t_shell *shell, t_chained *list)$/;"	f
usage	readline/share/readline/hist_erasedups.c	/^usage()$/;"	f	file:
usage	readline/share/readline/hist_purgecmd.c	/^usage()$/;"	f	file:
usage	readline/share/readline/rl.c	/^usage()$/;"	f	file:
usage	readline/share/readline/rlcat.c	/^usage()$/;"	f	file:
usage	readline/share/readline/rlevent.c	/^usage()$/;"	f	file:
user_command	structures.h	/^	struct s_toklst		*user_command;$/;"	m	struct:s_shell	typeref:struct:s_shell::s_toklst
user_input	readline/share/readline/rlptytest.c	/^user_input()$/;"	f	file:
vagueparser	tokens/token_utils.c	/^char	*vagueparser(int i, char *newvar, t_chained	*envp)$/;"	f
valid_arg	builtins/unset.c	/^int	valid_arg(char *arg)$/;"	f
valid_argument	readline/share/readline/fileman.c	/^valid_argument (caller, arg)$/;"	f
valid_pipe	structures.h	/^	int					valid_pipe;$/;"	m	struct:s_shell
var	structures.h	/^	char				*var;$/;"	m	struct:s_tok
var	structures.h	/^	char				*var;$/;"	m	struct:s_unset
variable	structures.h	/^	char				*variable;$/;"	m	struct:s_node
variable_b_is_in_env	bonusbuiltin/export_bonus.c	/^static void	variable_b_is_in_env(char *var, t_shell *shell, char *cmd)$/;"	f	file:
variable_is_in_env	builtins/export.c	/^static void	variable_is_in_env(char *var, t_shell *shell, t_tok *temp)$/;"	f	file:
varjumper	redirections/heredoc.c	/^int	varjumper(char *var, int i)$/;"	f
varjumper	tokens/quotes_management.c	/^static int	varjumper(char *var, int i)$/;"	f	file:
varparser	redirections/heredoc.c	/^char	*varparser(char *var, int i, char *newvar, t_chained *env)$/;"	f
vflag	readline/share/readline/rlcat.c	/^static int vflag;$/;"	v	file:
wait_pid_mono	execution/exec/pipe_utils.c	/^int	wait_pid_mono(t_shell *shell, int i)$/;"	f
wait_pids	execution/exec/pipe_utils.c	/^int	wait_pids(pid_t *pid, t_shell *shell)$/;"	f
wait_pids_bonus	execution/exec_bonus/execution_utils.c	/^int	wait_pids_bonus(pid_t *pid, t_shell *shell, int end, int i)$/;"	f
what	readline/include/readline/readline.h	/^  enum undo_code what;		\/* Delete, Insert, Begin, End. *\/$/;"	m	struct:undo_list	typeref:enum:undo_list::undo_code
whitespace	readline/include/readline/chardefs.h	/^#define whitespace(/;"	d
wild_after	structures.h	/^	char				*wild_after;$/;"	m	struct:s_shell
wild_all	structures.h	/^	int					wild_all;$/;"	m	struct:s_shell
wild_before	structures.h	/^	char				*wild_before;$/;"	m	struct:s_shell
wild_middle	structures.h	/^	char				**wild_middle;$/;"	m	struct:s_shell
wordbreakchars	readline/include/readline/readline.h	/^  char *wordbreakchars;$/;"	m	struct:readline_state
