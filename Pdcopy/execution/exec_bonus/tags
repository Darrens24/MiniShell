!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
allocate_pids_and_fds	clean_tree.c	/^void	allocate_pids_and_fds(t_shell *shell, int count)$/;"	f
builtin_manager_bonus	builtin_bonus.c	/^int	builtin_manager_bonus(t_shell *shell, int index)$/;"	f
check_valid_pipe	execute_final_boss.c	/^int	check_valid_pipe(t_branch *map)$/;"	f
clean	clean_tree.c	/^t_branch	*clean(t_branch *temp, t_branch *map)$/;"	f
clean_node	clean_tree.c	/^void	clean_node(t_branch *temp)$/;"	f
execute_command_clean_leaf	execution_bonus.c	/^int	execute_command_clean_leaf(t_shell *shell, char **command)$/;"	f
execute_map_dad	execute_final_boss.c	/^int	execute_map_dad(t_shell *shell, t_branch *map, t_branch *tmp)$/;"	f
execute_map_left	execute_final_boss.c	/^int	execute_map_left(t_shell *shell, t_branch *map)$/;"	f
execute_map_operator	execute_final_boss.c	/^int	execute_map_operator(t_shell *shell, t_branch *map, t_branch *tmp)$/;"	f
execute_map_right	execute_final_boss.c	/^int	execute_map_right(t_shell *shell, t_branch *map, t_branch *tmp)$/;"	f
execute_subshell	execute_final_boss.c	/^int	execute_subshell(t_shell *shell, t_branch *map)$/;"	f
execution_bonus	execute_final_boss.c	/^int	execution_bonus(t_shell *shell, t_branch *map)$/;"	f
find_path_bonus	execution_bonus.c	/^char	*find_path_bonus(char *command, t_shell *shell)$/;"	f
get_bcmd	clean_tree.c	/^int	get_bcmd(t_toklst *user_command, t_shell *shell)$/;"	f
get_correct_path_bonus	execution_bonus.c	/^char	*get_correct_path_bonus(t_shell *shell, char *command)$/;"	f
is_and	execution_utils.c	/^int	is_and(char *cmd)$/;"	f
is_builtin_command_bonus	execution_bonus.c	/^int	is_builtin_command_bonus(char **command)$/;"	f
is_last_pipe_command	execute_final_boss.c	/^int	is_last_pipe_command(t_branch *map)$/;"	f
is_or	execution_utils.c	/^int	is_or(char *cmd)$/;"	f
is_parenthese	clean_tree.c	/^int	is_parenthese(char *str)$/;"	f
is_pipe	execution_utils.c	/^int	is_pipe(char *cmd)$/;"	f
not_execute_builtin	execution_utils.c	/^int	not_execute_builtin(t_shell *shell, char **command, char *tmp,$/;"	f
redirection_bonus	execution_bonus.c	/^int	redirection_bonus(t_shell *shell)$/;"	f
wait_pids_bonus	execution_utils.c	/^int	wait_pids_bonus(pid_t *pid, t_shell *shell, int end, int i)$/;"	f
