!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
add_files_to_toklist	wildcards_utils.c	/^void	add_files_to_toklist(char *buffer, int fd_temp, t_shell *shell)$/;"	f
all_wildcards	wildcards_parsing.c	/^int	all_wildcards(char *buffer, t_shell *shell)$/;"	f
cmd_has_wildcard	wildcards_data.c	/^int	cmd_has_wildcard(t_shell *shell)$/;"	f
compare_after_wildcard	wildcards.c	/^int	compare_after_wildcard(char *buffer, t_shell *shell)$/;"	f
compare_middle_wildcard	wildcards.c	/^int	compare_middle_wildcard(char *buffer, t_shell *shell)$/;"	f
execute_ls_in_tmp	wildcards_utils.c	/^int	execute_ls_in_tmp(t_shell *shell, char **envp)$/;"	f
free_wildcards	wildcards_data.c	/^int	free_wildcards(t_shell *shell)$/;"	f
get_asked_wildcards	wildcards.c	/^int	get_asked_wildcards(char *var, t_shell *shell)$/;"	f
get_nb_of_wildcard	wildcards_data.c	/^int	get_nb_of_wildcard(char *var)$/;"	f
get_wild_middle	wildcards.c	/^char	*get_wild_middle(char *str, int index)$/;"	f
get_wildcard_files	wildcards.c	/^int	get_wildcard_files(t_shell *shell)$/;"	f
is_matching_file	wildcards_parsing.c	/^int	is_matching_file(char *buffer, t_shell *shell)$/;"	f
jump_next_wildcard	wildcards_utils.c	/^int	jump_next_wildcard(char *str, int index)$/;"	f
jump_previous_wildcard	wildcards_utils.c	/^int	jump_previous_wildcard(char *str, int index)$/;"	f
no_wildcard_before	wildcards_data.c	/^int	no_wildcard_before(char *str, int index)$/;"	f
one_wildcard_only	wildcards_parsing.c	/^int	one_wildcard_only(char *buffer, t_shell *shell)$/;"	f
parse_wildcard	wildcards_parsing.c	/^int	parse_wildcard(t_shell *shell, char **envp)$/;"	f
remove_newline_from_buffer	wildcards_utils.c	/^char	*remove_newline_from_buffer(char *buffer)$/;"	f
string_is_wildcard	wildcards_data.c	/^int	string_is_wildcard(char *str)$/;"	f
two_wildcards	wildcards_parsing.c	/^int	two_wildcards(char *buffer, t_shell *shell)$/;"	f
